openapi: 3.0.0
info:
  title: My NHS Graph
  description: "WIP Strawman API ideas for a Unified API myNHS API Graph endpoint,\
    \ bringing together both new \"User Generated Data\" and existing sources into\
    \ one endpoint and one Authorisation model, supporting delegated user access and\
    \ proxy access. Modeling that the records belong to the \"tennant\" with owners\
    \ having proxy access (ie full) and users being shared specifics records. Oauth\
    \ scopes, with modifiers of .shared and .all. Look at Microsoft Graph for where\
    \ that comes from. To support idempotency, all POST apis are just requests to\
    \ start something, the put starts this. Alows for evential consistency. Long running\
    \ GETs are removed, by POSTing requests for data, with a GET endpoint returned."
  version: "0.1"
servers:
- url: https://virtserver.swaggerhub.com/NHSX/MyNhs/0.1
  description: SwaggerHub API Auto Mocking
tags:
- name: Digital Health Tools
  description: "APIs that take submitted data and give an answer - ie a wrapper around\
    \ \"the algorithm\", and not reading from the users data store"
- name: Access and Applications
  description: "Applications and Services that have been granted access. A \"tenant\"\
    \ has the data linked to it. It has owners (normally just 1) and if that person\
    \ wants to share it, they can add additional users - ie family members - delegation\
    \ / shared. Proxy could work by allowing additional owners to be added. Or, a\
    \ childs record has both parents as owners, and the child can be optionally added\
    \ with specific permissions? A user by default accessing their own data, would\
    \ use the /my endpoints. A user given delegated access, would use the /{userId}\
    \ endpoints. Full proxy access would allow access to the /my as if you were the\
    \ primary user?"
- name: Profile
  description: NHS Profiles
- name: Observations
  description: Basic Observations
- name: Observations|Submissions
  description: "Submit new observations in a fully Asyncronous way supporting idempotency\
    \ of the full transaction. Call POST with initital data and to get a submission\
    \ Id, make changes with PUT, and then to start the submission call PUT on /submit."
- name: Digital Health Checks
  description: My Completed Digital Health Checks
- name: Digital Health Checks|Submissions
  description: My Digital Health Checks - would take data from the "Observations"
    data store?
- name: Medical Records
  description: "dealing with long running GP queries (that don't have a SLA on their\
    \ API calls), have a request driven model with a reponse to an end point to view\
    \ status of request, and the actual result"
- name: Appointments
  description: Details of your appointments.
- name: Events
  description: Events and notifications.
- name: Audits
  description: Audit Access History
- name: My NHS Management
  description: is not in the scope of a tenancy - ie covers all.
paths:
  /helloworld/hi:
    get:
      tags:
      - My NHS Management
      description: Test
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - ApiKeyAuth: []
  /mynhsmanagement/tenants:
    get:
      tags:
      - My NHS Management
      description: "Gets a list of all tenancies for the current user. Required OAuth\
        \ Scopes: [tenants.read]"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - tenants.read
  /mynhs/{userId}/appointments:
    get:
      tags:
      - Appointments
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - appointment.read
        - appointment.read.shared
        - appointment.read.all
  /mynhs/tools/healthcheck:
    post:
      tags:
      - Digital Health Tools
      summary: Run a health check on provided data
      description: "**Does not store anything**, just returns response"
      operationId: PostHealthCheck
      requestBody:
        description: Optional description in *Markdown*
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalHealthCheckRequestAll'
            examples:
              All:
                $ref: '#/components/schemas/DigitalHealthCheckRequestAll'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalHealthCheckResult'
      security:
      - MyNhsOAuth2:
        - healthcheck.execute
  /mynhs/tools/heartage:
    post:
      tags:
      - Digital Health Tools
      requestBody:
        description: Optional description in *Markdown*
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalHealthCheckRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalHealthCheckResult'
  /mynhs/tools/bloodpressure:
    post:
      tags:
      - Digital Health Tools
      requestBody:
        description: Returns an analysis of the given blood pressure reading.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BloodPressure'
            examples:
              Normal:
                value:
                  Systolic: 110
                  Diastolic: 70
              Hypertensive Crisis:
                value:
                  Systolic: 180
                  Diastolic: 120
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BloodPressureResult'
              examples:
                Normal:
                  value:
                    BloodPressureCategory: Normal
                Crisis:
                  value:
                    BloodPressureCategory: Hypertensive Crisis
  /mynhs/tools/daysold:
    post:
      tags:
      - Digital Health Tools
      requestBody:
        description: Optional description in *Markdown*
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateOfBirth'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaysOld'
  /mynhs/{userId}/digitalhealthchecks:
    get:
      tags:
      - Digital Health Checks|Submissions
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: skip
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: The numbers of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - digitalhealthcheck.read
  /mynhs/{userId}/digitalhealthchecks/submissions:
    post:
      tags:
      - Digital Health Checks|Submissions
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      requestBody:
        description: Returns an analysis of the given blood pressure reading.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalHealthCheckRequestAll'
            examples:
              All:
                $ref: '#/components/schemas/DigitalHealthCheckRequestAll'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - digitalhealthcheck.read
  /mynhs/{userId}/digitalhealthchecks/submissions/{submissionId}:
    get:
      tags:
      - Digital Health Checks|Submissions
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: submissionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: baf12b6c-d18b-43ad-b49e-e72ca102a970
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - digitalhealthcheck.read
    put:
      tags:
      - Digital Health Checks|Submissions
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: submissionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: baf12b6c-d18b-43ad-b49e-e72ca102a970
      requestBody:
        description: Returns an analysis of the given blood pressure reading.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalHealthCheckRequest'
            examples:
              All:
                $ref: '#/components/schemas/DigitalHealthCheckRequestAll'
              DaysOld:
                $ref: '#/components/examples/DaysOldExample'
              Height:
                $ref: '#/components/examples/HeightExample1'
              AgeAndHeightExample:
                $ref: '#/components/examples/AgeAndHeightExample'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - digitalhealthcheck.read
  /mynhs/{userId}/digitalhealthchecks/submissions/{submissionId}/submit:
    put:
      tags:
      - Digital Health Checks|Submissions
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: submissionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: baf12b6c-d18b-43ad-b49e-e72ca102a970
      responses:
        "202":
          description: "Note the 202 Accepted response, not a 200 OK. The location\
            \ of the created resource when created is avaliable from the Location\
            \ header, or the ResourceLocation property in the response."
          headers:
            Location:
              description: 202 The location that the created resource will be avaliable
                at. Same as response body ResourceLocation
              style: simple
              explode: false
              schema:
                type: string
                format: uri
              example: "/mynhs/my/observations/{ResourceId}"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResponse'
      security:
      - MyNhsOAuth2:
        - digitalhealthcheck.read
  /mynhs/{userId}/digitalhealthchecks/{healthCheckId}:
    get:
      tags:
      - Digital Health Checks
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: healthCheckId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: baf12b6c-d18b-43ad-b49e-e72ca102a970
      - name: skip
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: The numbers of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - digitalhealthcheck.read
  /mynhs/{userId}/digitalhealthchecks/{healthCheckId}/{healthCheckType}:
    get:
      tags:
      - Digital Health Checks
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: healthCheckId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: baf12b6c-d18b-43ad-b49e-e72ca102a970
      - name: skip
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: The numbers of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          default: 20
      - name: healthCheckType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - all
          - weight
          - bloodpressure
          - height
          - bloodsugar
          - colesterol
          - wellnessquestions
          - age
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - digitalhealthcheck.read
  /mynhs/tennantOrOrganisationOrTheNameForWhatRecordsAreLinkedTo:
    get:
      tags:
      - Access and Applications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - tennant.read
  /mynhs/applications:
    get:
      tags:
      - Access and Applications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - applications.read
  /mynhs/owners:
    get:
      tags:
      - Access and Applications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - applications.read
  /mynhs/users:
    get:
      tags:
      - Access and Applications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
      security:
      - MyNhsOAuth2:
        - applications.read
  /mynhs/{userId}/user:
    get:
      tags:
      - Access and Applications
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
      security:
      - MyNhsOAuth2:
        - applications.read
  /mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords:
    post:
      tags:
      - Medical Records
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyNhsProfile'
      security:
      - MyNhsOAuth2:
        - profile.read
  /mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords/{requestId}:
    get:
      tags:
      - Medical Records
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: requestId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyNhsProfile'
      security:
      - MyNhsOAuth2:
        - profile.read
  /mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords/{requestId}/submit:
    put:
      tags:
      - Medical Records
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: requestId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyNhsProfile'
      security:
      - MyNhsOAuth2:
        - profile.read
  /mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords/results/{resultId}:
    get:
      tags:
      - Medical Records
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: resultId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyNhsProfile'
      security:
      - MyNhsOAuth2:
        - profile.read
  /mynhs/{userId}/medicalrecords/summary/nhs:
    get:
      tags:
      - Medical Records
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyNhsProfile'
      security:
      - MyNhsOAuth2:
        - profile.read
  /mynhs/{userId}/medicalrecords/summary/nhs/{trustId}:
    get:
      tags:
      - Medical Records
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: trustId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyNhsProfile'
      security:
      - MyNhsOAuth2:
        - profile.read
  /mynhs/{userId}/profile/centralnhs:
    get:
      tags:
      - Profile
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - profile.read
  /mynhs/{userId}/profile/gp:
    get:
      tags:
      - Profile
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GpProfile'
      security:
      - MyNhsOAuth2:
        - profile.read
  /mynhs/{userId}/profile:
    get:
      tags:
      - Profile
      description: "Scopes: [profile.read, profile.read.shared, profile.read.all]"
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyNhsProfile'
      security:
      - MyNhsOAuth2:
        - profile.read
        - profile.read.shared
        - profile.read.all
  /mynhs/{userId}/observations/{observationType}:
    get:
      tags:
      - Observations
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: skip
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: The numbers of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          default: 20
      - name: observationType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - all
          - weight
          - bloodpressure
          - height
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
  /mynhs/{userId}/observations/submissions:
    get:
      tags:
      - Observations|Submissions
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionStatusBaseWithDataArray'
    post:
      tags:
      - Observations|Submissions
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      requestBody:
        description: Starts a submission on an observation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
            examples:
              DaysOld:
                $ref: '#/components/examples/ObservationExample'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionStatusBase'
              examples:
                DaysOld:
                  $ref: '#/components/examples/ObservationResponseExample'
  /mynhs/{userId}/observations/submissions/{submissionId}/submit:
    put:
      tags:
      - Observations|Submissions
      description: "Submits the request to create the observation submission. A PUT\
        \ should be fully idempotent, so the result will always be the same. Call\
        \ GET on /mynhs/{userId}/observations/submissions/{submissionId} to get the\
        \ current status."
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: submissionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: baf12b6c-d18b-43ad-b49e-e72ca102a970
      responses:
        "200":
          description: "Note the 200 response. This is not saying created, or accepted\
            \ - but OK it has finished but not created. This actually indicated likely\
            \ a problem here."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinishedSubmissionStatusBaseWithoutLocation'
        "201":
          description: "Note the 201 Created response, not a 200 OK. The location\
            \ of the created resource avaliable from the Location header, or the ResourceLocation\
            \ property in the response."
          headers:
            Location:
              description: 202 The location that the created resource will be avaliable
                at. Same as response body ResourceLocation
              style: simple
              explode: false
              schema:
                type: string
                format: uri
              example: "/mynhs/my/observations/{ResourceId}"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResponse'
        "202":
          description: "Note the 202 Accepted response, not a 200 OK. The location\
            \ of the created resource when created is avaliable from the Location\
            \ header, or the ResourceLocation property in the response."
          headers:
            Location:
              description: 202 The location that the created resource will be avaliable
                at. Same as response body ResourceLocation
              style: simple
              explode: false
              schema:
                type: string
                format: uri
              example: "/mynhs/my/observations/{ResourceId}"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResponse'
  /mynhs/{userId}/observations/submissions/{submissionId}:
    get:
      tags:
      - Observations|Submissions
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: submissionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: baf12b6c-d18b-43ad-b49e-e72ca102a970
      responses:
        "200":
          description: Accepted
          headers:
            Location:
              description: 200 The location that the created resource will be avaliable
                at. Same as response body ResourceLocation
              style: simple
              explode: false
              schema:
                type: string
                format: uri
              example: "/mynhs/my/observations/{ResourceId}"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionStatus'
    put:
      tags:
      - Observations|Submissions
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: submissionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: baf12b6c-d18b-43ad-b49e-e72ca102a970
      requestBody:
        description: Starts a submission on an observation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
            examples:
              DaysOld:
                $ref: '#/components/examples/ObservationExample'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionStatusBase'
              examples:
                DaysOld:
                  $ref: '#/components/examples/ObservationResponseExample'
  /mynhs/{userId}/observations/summaries:
    get:
      tags:
      - Observations
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
  /mynhs/{userId}/observations/summaries/{observationType}/{queryType}/{pastDays}:
    get:
      tags:
      - Observations
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      - name: observationType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - all
          - weight
          - bloodpressure
          - height
      - name: queryType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - min
          - max
          - avg
          - stdDev
      - name: pastDays
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
          enum:
          - 1
          - 3
          - 5
          - 7
          - 14
          - 30
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - observations.bloodpressure.summary.read
  /mynhs/{userId}/events:
    get:
      tags:
      - Events
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
      security:
      - MyNhsOAuth2:
        - events.read
        - events.read.shared
        - events.read.all
  /mynhs/{userId}/audits:
    get:
      tags:
      - Audits
      parameters:
      - name: userId
        in: path
        description: The User Id to access
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          type: string
        examples:
          userId:
            summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
            value: baf12b6c-d18b-43ad-b49e-e72ca102a970
          my:
            summary: "[my] - will not require addition restrictor on the scope"
            value: my
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
components:
  schemas:
    MyNhsProfile:
      type: object
      properties:
        NHSProfile:
          $ref: '#/components/schemas/NhsProfile'
        GpProfile:
          $ref: '#/components/schemas/GpProfile'
    UserProfile:
      type: object
      properties:
        FirstName:
          type: string
        SurName:
          type: string
        DateOfBirth:
          type: string
          format: date
    NhsProfile:
      type: object
      properties:
        NhsNumber:
          type: integer
          format: int64
    GpProfile:
      type: object
      properties:
        GpIdCode:
          type: integer
          format: int64
    Observation:
      type: object
      anyOf:
      - $ref: '#/components/schemas/Age'
      - $ref: '#/components/schemas/Height'
      - $ref: '#/components/schemas/Mass'
      - $ref: '#/components/schemas/BloodPressure'
      - $ref: '#/components/schemas/BloodSugar'
      - $ref: '#/components/schemas/Colesterol'
    DigitalHealthCheckRequest:
      type: object
      oneOf:
      - $ref: '#/components/schemas/DigitalHealthCheckRequestAll'
      - $ref: '#/components/schemas/DigitalHealthCheckRequestMinimal'
    DigitalHealthCheckRequestMinimal:
      type: object
      anyOf:
      - $ref: '#/components/schemas/Age'
      - $ref: '#/components/schemas/Height'
      - $ref: '#/components/schemas/Mass'
      - $ref: '#/components/schemas/BloodPressure'
      - $ref: '#/components/schemas/BloodSugar'
      - $ref: '#/components/schemas/Colesterol'
    DigitalHealthCheckRequestAll:
      required:
      - Age
      - AlcoholUse
      - BloodPressure
      - BloodSugar
      - Colesterol
      - Ethnicity
      - FamilyHistory
      - Gender
      - Height
      - PhysicalActivity
      - Smoking
      - Weight
      type: object
      properties:
        Age:
          $ref: '#/components/schemas/Age'
        Height:
          $ref: '#/components/schemas/Height'
        Weight:
          $ref: '#/components/schemas/Mass'
        BloodPressure:
          $ref: '#/components/schemas/BloodPressure'
        BloodSugar:
          $ref: '#/components/schemas/BloodSugar'
        Colesterol:
          $ref: '#/components/schemas/Colesterol'
        Ethnicity:
          type: string
          example: Default Ethnicity
        AlcoholUse:
          type: integer
          format: int64
        Smoking:
          type: integer
          format: int64
        PhysicalActivity:
          type: integer
          format: int64
        FamilyHistory:
          type: integer
          format: int64
        Gender:
          type: string
    DigitalHealthCheckResult:
      type: object
      properties:
        HealthyPercentage:
          type: integer
          format: int64
    Colesterol:
      type: object
      properties:
        LDL:
          type: number
          description: mg/dL
        HDL:
          type: number
          description: mg/dL
        TotalCholesterol:
          type: number
          description: mg/dL
        Triglycerides:
          type: number
          description: mg/dL
        VldlLevels:
          type: number
          description: mg/dL
    BloodSugar:
      type: object
      discriminator:
        propertyName: bloodSugarReadingType
      oneOf:
      - $ref: '#/components/schemas/Glocose'
      - $ref: '#/components/schemas/MeanBlood'
      - $ref: '#/components/schemas/HBA1C'
    Glocose:
      required:
      - bloodSugarReadingType
      - mmolL
      type: object
      properties:
        mmolL:
          type: number
          example: 8.2
        bloodSugarReadingType:
          type: string
          default: Glocose
    MeanBlood:
      required:
      - bloodSugarReadingType
      - mgdl
      type: object
      properties:
        mgdl:
          type: number
          example: 150
        bloodSugarReadingType:
          type: string
          default: MeanBlood
    HBA1C:
      required:
      - TestScore
      - bloodSugarReadingType
      type: object
      properties:
        TestScore:
          type: number
          example: 7.0
        bloodSugarReadingType:
          type: string
          default: HBA1C
    Height:
      required:
      - Millimeters
      type: object
      properties:
        Millimeters:
          type: integer
          format: int64
          example: 1700
    Mass:
      required:
      - Grams
      type: object
      properties:
        Grams:
          type: integer
          format: int64
          example: 100000
    BloodPressure:
      type: object
      properties:
        Systolic:
          type: integer
          description: The bigger number (the first number)
          format: int64
          example: 80
        Diastolic:
          type: integer
          description: The smaller number (the second number)
          format: int64
          example: 110
      description: Diastolic/Systolic
    BloodPressureResult:
      type: object
      properties:
        BloodPressureCategory:
          type: string
          example: Hypertensive Crisis
          enum:
          - Normal
          - Elevated
          - Hypertension Stage 1
          - Hypertension Stage 2
          - Hypertensive Crisis
    Age:
      type: object
      oneOf:
      - $ref: '#/components/schemas/DaysOld'
      - $ref: '#/components/schemas/YearsOld'
      - $ref: '#/components/schemas/DateOfBirth'
    DateOfBirth:
      type: object
      properties:
        BirthdayDoNotUse:
          type: string
          description: Date of birth - * DO NOT USE * this as it means operations
            will not be repeatable
          format: date
    YearsOld:
      type: object
      properties:
        Years:
          type: integer
          description: Number of years old (rounded down to whole number)
          example: 33
    DaysOld:
      type: object
      properties:
        Days:
          type: integer
          description: Number of days old (rounded down to whole number)
          example: 6541
    SubmissionResponse:
      type: object
      allOf:
      - $ref: '#/components/schemas/SubmissionStatusBaseWithLocation'
    SubmissionStatusBase:
      type: object
      properties:
        SubmissionId:
          type: string
          format: uuid
        SubmittedByUserId:
          type: string
          format: uuid
        SubmittedByAppId:
          type: string
          format: uuid
        DateSubmissionCreated:
          type: string
          format: date-time
        SubmittedData:
          type: object
    SubmissionStatusBaseWithDataArray:
      type: array
      items:
        $ref: '#/components/schemas/SubmissionStatusBase'
    FinishedSubmissionStatusBaseWithoutLocation:
      type: object
      properties:
        DateSubmitted:
          type: string
          format: date-time
        SubmissionStatusLocation:
          type: string
          format: uri
          example: "/mynhs/my/observations/submissions/{SubmissionId}"
      allOf:
      - $ref: '#/components/schemas/SubmissionStatusBase'
    SubmissionStatusBaseWithLocation:
      type: object
      properties:
        ResourceId:
          type: string
          format: uuid
        DateSubmitted:
          type: string
          format: date-time
        SubmissionStatusLocation:
          type: string
          format: uri
          example: "/mynhs/my/observations/submissions/{SubmissionId}"
        ResourceLocation:
          type: string
          description: The location that the created resource will be avaliable at.
            Same as response header Location
          format: uri
          example: "/mynhs/my/observations/{ResourceId}"
      allOf:
      - $ref: '#/components/schemas/SubmissionStatusBase'
    SubmissionStatus:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusEnum'
        PercentComplete:
          type: integer
          format: percent
        StagesDetails:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionResponseDetails'
      allOf:
      - $ref: '#/components/schemas/SubmissionStatusBaseWithLocation'
    SubmissionResponseDetails:
      type: object
      properties:
        SystemName:
          type: string
        Status:
          $ref: '#/components/schemas/StatusEnum'
        IsCompletedSuccessfully:
          type: boolean
        PercentComplete:
          $ref: '#/components/schemas/PercentComplete'
        DateStarted:
          type: string
          format: date-time
        DateFinished:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
    StatusEnum:
      type: string
      enum:
      - Not Started
      - In progress
      - Success
      - Failed
    PercentComplete:
      maximum: 100
      minimum: 0
      type: integer
      format: int32
      example: 99
      default: 0
  responses:
    SubmissionAcceptedResponse:
      description: "Note the 202 Accepted response, not a 200 OK. The location of\
        \ the created resource when created is avaliable from the Location header,\
        \ or the ResourceLocation property in the response."
      headers:
        Location:
          description: 202 The location that the created resource will be avaliable
            at. Same as response body ResourceLocation
          style: simple
          explode: false
          schema:
            type: string
            format: uri
          example: "/mynhs/my/observations/{ResourceId}"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubmissionResponse'
    SubmissionCreatedResponse:
      description: "Note the 201 Created response, not a 200 OK. The location of the\
        \ created resource avaliable from the Location header, or the ResourceLocation\
        \ property in the response."
      headers:
        Location:
          description: 202 The location that the created resource will be avaliable
            at. Same as response body ResourceLocation
          style: simple
          explode: false
          schema:
            type: string
            format: uri
          example: "/mynhs/my/observations/{ResourceId}"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubmissionResponse'
    SubmissionFinishedResponse:
      description: "Note the 200 response. This is not saying created, or accepted\
        \ - but OK it has finished but not created. This actually indicated likely\
        \ a problem here."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinishedSubmissionStatusBaseWithoutLocation'
    SubmissionStatusResponse:
      description: Accepted
      headers:
        Location:
          description: 200 The location that the created resource will be avaliable
            at. Same as response body ResourceLocation
          style: simple
          explode: false
          schema:
            type: string
            format: uri
          example: "/mynhs/my/observations/{ResourceId}"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubmissionStatus'
  parameters:
    skipParam:
      name: skip
      in: query
      description: The number of items to skip before starting to collect the result
        set.
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
    limitParam:
      name: limit
      in: query
      description: The numbers of items to return.
      required: false
      style: form
      explode: true
      schema:
        maximum: 50
        minimum: 1
        type: integer
        default: 20
    userIdParam:
      name: userId
      in: path
      description: The User Id to access
      required: true
      style: simple
      explode: false
      schema:
        pattern: "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
          -[0-9a-fA-F]{12}"
        type: string
      examples:
        userId:
          summary: "[UserId UUID] - require .All or .Shared oath scope restrictors"
          value: baf12b6c-d18b-43ad-b49e-e72ca102a970
        my:
          summary: "[my] - will not require addition restrictor on the scope"
          value: my
    submissionIdParam:
      name: submissionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
      example: baf12b6c-d18b-43ad-b49e-e72ca102a970
    healthCheckIdParam:
      name: healthCheckId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
      example: baf12b6c-d18b-43ad-b49e-e72ca102a970
    observationTypeParam:
      name: observationType
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - all
        - weight
        - bloodpressure
        - height
    healthCheckTypeParam:
      name: healthCheckType
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - all
        - weight
        - bloodpressure
        - height
        - bloodsugar
        - colesterol
        - wellnessquestions
        - age
    queryTypeParam:
      name: queryType
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - min
        - max
        - avg
        - stdDev
    pastDaysParam:
      name: pastDays
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: number
        enum:
        - 1
        - 3
        - 5
        - 7
        - 14
        - 30
  examples:
    ObservationExample:
      value:
        Age:
          Days: 4329
    ObservationResponseExample:
      value:
        SubmissionId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        SubmittedByUserId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        SubmittedByAppId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        SubmittedData:
          Age:
            Days: 4329
    DaysOldExample:
      summary: Number of days old
      value:
        Days: 4329
    HeightExample1:
      summary: Height in mm
      value:
        Millimeters: 654222
    AgeAndHeightExample:
      summary: Days old and Height in mm
      value:
        Days: 4329
        Millimeters: 654222
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header
    MyNhsOAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            appointment.read: Read
            appointment.read.all: Read All
            appointment.read.shared: Read Shared
            applications.read: Grants read access to applications
            profile.read: Read My Profile- only for owner to read the primary user
              profile
            profile.read.all: Read All Profiles - ie read profile of primary user
              if you have been given guest access
            events.read: Read My Events in this tennant
            events.read.shared: Read All events shared with me (ie another users events)
            events.read.all: Read All events - must be granted owner for this
            digitalhealthcheck.read: Grants read access to digital health check
            digitalhealthcheck.read.shared: Grants read access to digital health check
            observations.read: Read observations
            observations.read.shared: Read all obs
            observations.bloodpressure.read: Read your blood pressures
            observations.bloodpressure.read.shared: Read any blood pressures shared
              with you
            observations.bloodpressure.submit: Submit new blood pressure reading
            observations.bloodpressure.delete: Delete existing blood pressure reading
            observations.bloodpressure.summary.read: read summary
            observations.bloodpressure.summary.read.shared: sd
            healthcheck.execute: Run a health check
