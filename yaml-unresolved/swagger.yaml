openapi: 3.0.0
info:
  version: "0.1"
  title: My NHS Graph
  description: 'WIP Strawman API ideas for a Unified API myNHS API Graph endpoint, bringing together both new "User Generated Data" and existing sources into one endpoint and one Authorisation model, supporting delegated user access and proxy access. Modeling that the records belong to the "tennant" with owners having proxy access (ie full) and users being shared specifics records. Oauth scopes, with modifiers of .shared and .all. Look at Microsoft Graph for where that comes from. To support idempotency, all POST apis are just requests to start something, the put starts this. Alows for evential consistency. Long running GETs are removed, by POSTing requests for data, with a GET endpoint returned.'
  
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/NHSX/MyNhs/0.1

  
tags:
  - name: Digital Health Tools
    description: APIs that take submitted data and give an answer - ie a wrapper around "the algorithm", and not reading from the users data store  
  - name: Access and Applications
    description: Applications and Services that have been granted access. A "tenant" has the data linked to it. It has owners (normally just 1) and if that person wants to share it, they can add additional users - ie family members - delegation / shared. Proxy could work by allowing additional owners to be added. Or, a childs record has both parents as owners, and the child can be optionally added with specific permissions? A user by default accessing their own data, would use the /my endpoints. A user given delegated access, would use the /{userId} endpoints. Full proxy access would allow access to the /my as if you were the primary user?
  - name: Profile
    description: NHS Profiles
  - name: Observations
    description: Basic Observations
  - name: Observations|Submissions
    description: Submit new observations in a fully Asyncronous way. Call POST with initital data and to get a submission Id, make changes with PUT, and then to start the submission call PUT on /submit.
  - name: Digital Health Checks
    description: My Completed Digital Health Checks
  - name: Digital Health Checks|Submissions
    description: My Digital Health Checks - would take data from the "Observations" data store?
  - name: Medical Records 
    description: dealing with long running GP queries (that don't have a SLA on their API calls), have a request driven model with a reponse to an end point to view status of request, and the actual result
  - name: Appointments  
    description: Details of your appointments.
  - name: Events
    description: Events and notifications.
  - name: Audits
    description: Audit Access History 
  - name: My NHS Management
    description: is not in the scope of a tenancy - ie covers all.
  
paths:


  /mynhsmanagement/tenants:
    get:
      description: "Gets a list of all tenancies for the current user. Required OAuth Scopes: [tenants.read]"
      tags:
        -  My NHS Management
      security:
        - OAuth2: [tenants.read]           
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
                
  /mynhs/{userId}/appointments:
    get:
      tags:
        -  Appointments
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      security:
        - OAuth2: [appointment.read, appointment.read.shared, appointment.read.all]           
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
                
  /mynhs/tools/healthcheck:
    post:
      operationId: PostHealthCheck
      summary: Run a health check on provided data   
      description: '**Does not store anything**, just returns response'
      tags:
        -  Digital Health Tools
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalHealthCheckRequestAll'
            examples:
              All:
                $ref: '#/components/schemas/DigitalHealthCheckRequestAll'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalHealthCheckResult'

  /mynhs/tools/heartage:
    post:
      tags:
        -  Digital Health Tools
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalHealthCheckRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalHealthCheckResult'
                
  /mynhs/tools/bloodpressure:
    post:
      tags:
        -  Digital Health Tools
      requestBody:
        description: Returns an analysis of the given blood pressure reading.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BloodPressure'
            examples:
              Normal:
                value:
                  Systolic: 110       
                  Diastolic: 70
              Hypertensive Crisis:
                value:
                  Systolic: 180      
                  Diastolic: 120                    
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BloodPressureResult'
              examples:
                Normal:
                  value:
                    BloodPressureCategory: Normal
                Crisis:
                  value:
                    BloodPressureCategory: Hypertensive Crisis
     
  /mynhs/tools/daysold:
    post:
      tags:
        -  Digital Health Tools
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateOfBirth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaysOld'
                
  /mynhs/{userId}/digitalhealthchecks:
    get:
      tags:
        -  Digital Health Checks|Submissions
      security:
        - OAuth2: [digitalhealthcheck.read]           
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/skipParam'
        - $ref: '#/components/parameters/limitParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------

  /mynhs/{userId}/digitalhealthchecks/submissions:
    post:
      tags:
        -  Digital Health Checks|Submissions
      security:
        - OAuth2: [digitalhealthcheck.read]  
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      requestBody:
        description: Returns an analysis of the given blood pressure reading.
        required: true
        content:        
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalHealthCheckRequestAll'
            examples:
              All:
                $ref: '#/components/schemas/DigitalHealthCheckRequestAll'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------
  /mynhs/{userId}/digitalhealthchecks/submissions/{submissionId}:
    put:
      tags:
        -  Digital Health Checks|Submissions
      security:
        - OAuth2: [digitalhealthcheck.read] 
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/submissionIdParam'    
      requestBody:
        description: Returns an analysis of the given blood pressure reading.
        required: true
        content:        
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalHealthCheckRequest'
            examples:
              All:
                $ref: '#/components/schemas/DigitalHealthCheckRequestAll'     
              DaysOld:
                $ref: '#/components/examples/DaysOldExample'  
              Height:
                  $ref: '#/components/examples/HeightExample1'    
              AgeAndHeightExample:
                  $ref: '#/components/examples/AgeAndHeightExample'                  
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------
    get:
      tags:
        -  Digital Health Checks|Submissions
      security:
        - OAuth2: [digitalhealthcheck.read]    
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/submissionIdParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------                
  /mynhs/{userId}/digitalhealthchecks/submissions/{submissionId}/submit:
    put:
      tags:
        -  Digital Health Checks|Submissions
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/submissionIdParam'    
      security:
        - OAuth2: [digitalhealthcheck.read]           
      responses:
        '202':
          $ref: '#/components/responses/SubmissionAcceptedResponse'
                                
                
  /mynhs/{userId}/digitalhealthchecks/{healthCheckId}:
    get:
      tags:
        -  Digital Health Checks
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/healthCheckIdParam'   
        - $ref: '#/components/parameters/skipParam'
        - $ref: '#/components/parameters/limitParam'          
      security:
        - OAuth2: [digitalhealthcheck.read]           
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------
  /mynhs/{userId}/digitalhealthchecks/{healthCheckId}/{healthCheckType}:
    get:
      tags:
        -  Digital Health Checks
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/healthCheckIdParam'      
        - $ref: '#/components/parameters/skipParam'
        - $ref: '#/components/parameters/limitParam'     
        - $ref: '#/components/parameters/healthCheckTypeParam'             
        
      security:
        - OAuth2: [digitalhealthcheck.read]           
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------                

  /mynhs/tennantOrOrganisationOrTheNameForWhatRecordsAreLinkedTo:
    get:
      tags:
        - Access and Applications
      security:
        - OAuth2: [tennant.read]         
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------
  /mynhs/applications:
    get:
      tags:
        - Access and Applications
      security:
        - OAuth2: [applications.read]         
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------
  /mynhs/owners:
    get:
      tags:
        - Access and Applications
      security:
        - OAuth2: [applications.read]         
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------                
  /mynhs/users:
    get:
      tags:
        - Access and Applications
      security:
        - OAuth2: [applications.read]         
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
             
  /mynhs/{userId}/user:
    get:
      tags:
        - Access and Applications
      security:
        - OAuth2: [applications.read]        
      parameters:
        - $ref: '#/components/parameters/userIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'          
                
  /mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords:
    post:
      tags:
        - Medical Records
      security:
        - OAuth2: [profile.read]  
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/MyNhsProfile'
                #  ---- /Added line  ----------------------------------------
                
                
  /mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords/{requestId}:
    get:
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - name: requestId
          in: path
          required: true
          schema:
            type: string       
      tags:
        - Medical Records
      security:
        - OAuth2: [profile.read]         
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/MyNhsProfile'
                #  ---- /Added line  ----------------------------------------
  /mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords/{requestId}/submit:
    put:
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - name: requestId
          in: path
          required: true
          schema:
            type: string       
      tags:
        - Medical Records
      security:
        - OAuth2: [profile.read]         
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/MyNhsProfile'
                #  ---- /Added line  ----------------------------------------
                
  /mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords/results/{resultId}:
    get:
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - name: resultId
          in: path
          required: true
          schema:
            type: string       
      tags:
        - Medical Records
      security:
        - OAuth2: [profile.read]         
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/MyNhsProfile'
                #  ---- /Added line  ----------------------------------------                
  /mynhs/{userId}/medicalrecords/summary/nhs:
    get:
      tags:
        - Medical Records
      security:
        - OAuth2: [profile.read]   
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/MyNhsProfile'
                #  ---- /Added line  ----------------------------------------
  /mynhs/{userId}/medicalrecords/summary/nhs/{trustId}:
    get:
      tags:
        - Medical Records
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - name: trustId
          in: path
          required: true
          schema:
            type: string  
      security:
        - OAuth2: [profile.read]         
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/MyNhsProfile'
                #  ---- /Added line  ----------------------------------------
                                
                

  /mynhs/{userId}/profile/centralnhs:
    get:
      tags:
        - Profile
      security:
        - OAuth2: [profile.read]   
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------        
  /mynhs/{userId}/profile/gp:
    get:
      tags:
        - Profile
      security:
        - OAuth2: [profile.read]   
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/GpProfile'
                #  ---- /Added line  ----------------------------------------                    
  /mynhs/{userId}/profile:
    get:
      tags:
        - Profile
      security:
        - OAuth2: [profile.read, profile.read.shared, profile.read.all]   
      description: 'Scopes: [profile.read, profile.read.shared, profile.read.all]'
      parameters:
        - $ref: '#/components/parameters/userIdParam' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/MyNhsProfile'
                #  ---- /Added line  ----------------------------------------                
  /mynhs/{userId}/observations/{observationType}:
    get:
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/skipParam'
        - $ref: '#/components/parameters/limitParam'            
        - $ref: '#/components/parameters/observationTypeParam'     

      tags:
        - Observations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------  
  /mynhs/{userId}/observations/submissions:
    post:
      tags:
        - Observations|Submissions   
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------  
    get:
      tags:
        - Observations|Submissions    
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------
  /mynhs/{userId}/observations/submissions/{submissionId}/submit:
    put:
      description: 'Submits the request to create the observation submission. A PUT should be fully idempotent, so the result will always be the same. Call GET on /mynhs/{userId}/observations/submissions/{submissionId} to get the current status.'
      tags:
        - Observations|Submissions     
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/submissionIdParam'   
      responses:
        '202':
          $ref: '#/components/responses/SubmissionAcceptedResponse'

  /mynhs/{userId}/observations/submissions/{submissionId}:
    get:
      tags:
        - Observations|Submissions    
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/submissionIdParam'
      responses:
        '200':
          $ref: '#/components/responses/SubmissionStatusResponse'
                                
    put:
      tags:
        - Observations|Submissions     
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/submissionIdParam'   
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------       
    
               
  /mynhs/{userId}/observations/summaries:
    get:
      tags:
        - Observations
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ---------------------------------------- 
  /mynhs/{userId}/observations/summaries/{observationType}/{queryType}/{pastDays}:
    get:
      tags:
        - Observations      
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/observationTypeParam'      
        - $ref: '#/components/parameters/queryTypeParam'      
        - $ref: '#/components/parameters/pastDaysParam'              
      
      security:
        - OAuth2: [observations.bloodpressure.summary.read]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ---------------------------------------- 
  /mynhs/{userId}/events:
    get:
      tags:
        - Events
      security:
        - OAuth2: [events.read, events.read.shared, events.read.all]
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NhsProfile'
             
  /mynhs/{userId}/audits:
    get:
      tags:
        - Audits  
      parameters:
        - $ref: '#/components/parameters/userIdParam'        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                #  ----- Added line  ----------------------------------------
                $ref: '#/components/schemas/NhsProfile'
                #  ---- /Added line  ----------------------------------------   

components:
  schemas:
    MyNhsProfile:
      type: object
      properties:
        NHSProfile:
          $ref: '#/components/schemas/NhsProfile'
        GpProfile:
          $ref: '#/components/schemas/GpProfile'
          
    UserProfile:
      type: object
      properties:
        FirstName:
          type: string
        SurName:
          type: string  
        DateOfBirth:
          type: string
          format: date
          
    NhsProfile:
      type: object
      properties:
        NhsNumber:
          type: integer
          format: int64
          
    GpProfile:
      type: object
      properties:
        GpIdCode:
          type: integer
          format: int64

    DigitalHealthCheckRequest:
      type: object
      oneOf:
        - $ref: '#/components/schemas/DigitalHealthCheckRequestAll'
        - $ref: '#/components/schemas/DigitalHealthCheckRequestMinimal'

    DigitalHealthCheckRequestMinimal:
      type: object    
      anyOf:
        - $ref: '#/components/schemas/Age'
        - $ref: '#/components/schemas/Height'
        - $ref: '#/components/schemas/Mass'
        - $ref: '#/components/schemas/BloodPressure'
        - $ref: '#/components/schemas/BloodSugar'
        - $ref: '#/components/schemas/Colesterol'    
        
    DigitalHealthCheckRequestAll:
      type: object
      required:
        - Age
        - Height
        - Weight
        - BloodPressure
        - BloodSugar
        - Colesterol
        - Ethnicity
        - AlcoholUse
        - Smoking
        - PhysicalActivity
        - FamilyHistory
        - Gender
      properties:
        Age:
          $ref: '#/components/schemas/Age'
        Height:
          $ref: '#/components/schemas/Height'
        Weight:
          $ref: '#/components/schemas/Mass'
        BloodPressure:
          $ref: '#/components/schemas/BloodPressure'
        BloodSugar:
          $ref: '#/components/schemas/BloodSugar'
        Colesterol:
          $ref: '#/components/schemas/Colesterol'
        Ethnicity:
          type: string
          example: 'Default Ethnicity'
        AlcoholUse:
          type: integer
          format: int64
        Smoking:
          type: integer
          format: int64    
        PhysicalActivity:
          type: integer
          format: int64 
        FamilyHistory:
          type: integer
          format: int64          
        Gender:
          type: string
    DigitalHealthCheckResult:
      type: object
      properties:
        HealthyPercentage:
          type: integer
          format: int64
    
    Colesterol:
      type: object
      properties:
        LDL: 
          type: number        
          description: 'mg/dL'
        HDL: 
          type: number  
          description: 'mg/dL'          
        TotalCholesterol:
          type: number        
          description: 'mg/dL'          
        Triglycerides:
          type: number        
          description: 'mg/dL'          
        VldlLevels:
          type: number        
          description: 'mg/dL'          
    BloodSugar:
      type: object
      oneOf:
          - $ref: '#/components/schemas/Glocose'
          - $ref: '#/components/schemas/MeanBlood'
          - $ref: '#/components/schemas/HBA1C'
      discriminator:
        propertyName: bloodSugarReadingType
    Glocose:
      type: object
      required:
        - bloodSugarReadingType  
        - mmolL
      properties:
        mmolL:
          type: number
          example: 8.2
        bloodSugarReadingType:
          type: string         
          default: 'Glocose'
    MeanBlood:
      type: object
      required:
        - bloodSugarReadingType     
        - mgdl
      properties:
        mgdl:
          type: number
          example: 150
        bloodSugarReadingType:
          type: string   
          default: 'MeanBlood'
    HBA1C:
      type: object
      required:
        - bloodSugarReadingType       
        - TestScore
      properties:
        TestScore:
          type: number
          example: 7.0
        bloodSugarReadingType:
          type: string   
          default: 'HBA1C'
          
    Height:
      type: object
      required:
        - Millimeters
      properties:
        Millimeters:
          type: integer
          format: int64    
          example: 1700
    Mass:
      type: object
      required:
        - Grams
      properties:
        Grams:
          type: integer
          format: int64
          example: 100000
    BloodPressure:
      type: object
      description: 'Diastolic/Systolic'
      properties:
        Systolic:
          type: integer
          format: int64
          description: The bigger number (the first number)
          example: 80
        Diastolic:
          type: integer
          format: int64
          description: The smaller number (the second number)
          example: 110
    BloodPressureResult:
      type: object
      properties:
        BloodPressureCategory:
          type: string
          enum: [Normal, Elevated, Hypertension Stage 1, Hypertension Stage 2, Hypertensive Crisis]
          example: 'Hypertensive Crisis'
    
    Age:
      type: object
      oneOf:
          - $ref: '#/components/schemas/DaysOld'         
          - $ref: '#/components/schemas/YearsOld'
          - $ref: '#/components/schemas/DateOfBirth'
        
    DateOfBirth:
       type: object
       properties: 
          BirthdayDoNotUse:
            type: string
            format: date
            description: 'Date of birth - * DO NOT USE * this as it means operations will not be repeatable'
            example: '12/30/2000'
    YearsOld:
      type: object
      properties: 
        Years:
          type: integer
          description: 'Number of years old (rounded down to whole number)'
          example: 33
    DaysOld:
      type: object
      properties: 
        Days:
          type: integer
          description: 'Number of days old (rounded down to whole number)'
          example: 6541

    SubmissionResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/SubmissionStatusBase' 
    
    SubmissionStatusBase:
      type: object
      properties:
        SubmissionId:
          type: string
          format: uuid
        SubmittedByUserId:
          type: string
          format: uuid
        SubmittedByAppId:
          type: string
          format: uuid        
        ResourceId:
          type: string
          format: uuid                       
        DateSubmitted:
          type: string
          format: date-time
        SubmissionStatusLocation:
          type: string
          format: uri
          example: '/mynhs/my/observations/submissions/{SubmissionId}'
        ResourceLocation:
          type: string
          format: uri
          description:  'The location that the created resource will be avaliable at. Same as response header Location'
          example: '/mynhs/my/observations/{ResourceId}'
          
    SubmissionStatus:
      type: object
      allOf:
        - $ref: '#/components/schemas/SubmissionStatusBase' 
      properties:
        Status:
          $ref: '#/components/schemas/StatusEnum' 
        PercentComplete:
          type: integer
          format: percent
        StagesDetails:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionResponseDetails'        
          
        
    SubmissionResponseDetails:
      type: object
      properties:
        SystemName: 
         type: string
        Status:
          $ref: '#/components/schemas/StatusEnum' 
        IsCompletedSuccessfully:
          type: boolean
        PercentComplete:
          $ref: '#/components/schemas/PercentComplete' 
        DateStarted:
          type: string
          format: date-time       
        DateFinished:
          type: string
          format: date-time        
        DateUpdated:
          type: string
          format: date-time    
    
    StatusEnum:
      type: string
      enum: [Not Started, In progress, Success, Failed ]      
      
    PercentComplete:
      type: integer
      format: int32   
      minimum: 0
      maximum: 100
      example: 99
      default: 0      
  
  examples:
    DaysOldExample:
      value:
        Days: 4329
      summary: Number of days old
    HeightExample1:
      value:
        Millimeters: 654222
      summary: Height in mm
    AgeAndHeightExample:
      value:
        Days: 4329
        Millimeters: 654222
      summary: Days old and Height in mm      

        
  parameters:
    skipParam:  # <-- Arbitrary name for the definition that will be used to refer to it.
      in: query
      name: skip
      required: false
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before starting to collect the result set.
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return.          
    userIdParam:
      in: path
      name: userId
      description: The User Id to access
      required: true
      schema:
        type: string  
        pattern: '^my$|[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}'
      examples: 
        userId: 
          value: 'baf12b6c-d18b-43ad-b49e-e72ca102a970'
          summary: '[UserId UUID] - require .All or .Shared oath scope restrictors'
        my: 
          value: 'my'
          summary: '[my] - will not require addition restrictor on the scope'
    submissionIdParam:
      in: path
      name: submissionId
      required: true
      schema:
        type: string     
        format: uuid
      example: 'baf12b6c-d18b-43ad-b49e-e72ca102a970'
    healthCheckIdParam:
      in: path
      name: healthCheckId
      required: true
      schema:
        type: string     
        format: uuid
      example: 'baf12b6c-d18b-43ad-b49e-e72ca102a970'      
    observationTypeParam:
      in: path
      name: observationType
      schema:
        type: string
        enum: [all, weight, bloodpressure, height]        
      required: true      
    healthCheckTypeParam:
      in: path
      name: healthCheckType
      schema:
        type: string
        enum: [all, weight, bloodpressure, height, bloodsugar, colesterol, wellnessquestions, age]
      required: true   
    queryTypeParam:      
      in: path
      name: queryType
      required: true
      schema:
        type: string
        enum: [min, max, avg, stdDev]        
    pastDaysParam:        
      in: path
      name: pastDays
      required: true
      schema:
        type: number
        enum: [1, 3, 5, 7, 14, 30]        
  
  responses:
    SubmissionAcceptedResponse:
        description: Accepted
        headers:
          Location:
            schema:
              type: string
              format: uri
            description: '202 The location that the created resource will be avaliable at. Same as response body ResourceLocation'
            example: '/mynhs/my/observations/{ResourceId}'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionResponse'

    SubmissionStatusResponse:
      description: Accepted
      headers:
        Location:
          schema:
            type: string
            format: uri
          description: '200 The location that the created resource will be avaliable at. Same as response body ResourceLocation'
          example: '/mynhs/my/observations/{ResourceId}'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubmissionStatus'    
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            applications.read: Grants read access to applications
            profile.read: Read My Profile- only for owner to read the primary user profile
            profile.read.all: Read All Profiles - ie read profile of primary user if you have been given guest access
            events.read: Read My Events in this tennant
            events.read.shared: Read All events shared with me (ie another users events)
            events.read.all: Read All events - must be granted owner for this
            digitalhealthcheck.read: Grants read access to digital health check
            digitalhealthcheck.read.shared: Grants read access to digital health check            
            observations.read: Read observations
            observations.read.shared: Read all obs
            observations.bloodpressure.read: Read your blood pressures
            observations.bloodpressure.read.shared: Read any blood pressures shared with you
            observations.bloodpressure.submit: Submit new blood pressure reading
            observations.bloodpressure.delete: Delete existing blood pressure reading
            observations.bloodpressure.summary.read: read summary
            observations.bloodpressure.summary.read.shared: sd