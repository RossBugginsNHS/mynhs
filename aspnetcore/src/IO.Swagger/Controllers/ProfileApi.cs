/*
 * My NHS Graph
 *
 * WIP Strawman API ideas for a Unified API myNHS API Graph endpoint, bringing together both new \"User Generated Data\" and existing sources into one endpoint and one Authorisation model, supporting delegated user access and proxy access. Modeling that the records belong to the \"tennant\" with owners having proxy access (ie full) and users being shared specifics records. Oauth scopes, with modifiers of .shared and .all. Look at Microsoft Graph for where that comes from. To support idempotency, all POST apis are just requests to start something, the put starts this. Alows for evential consistency. Long running GETs are removed, by POSTing requests for data, with a GET endpoint returned.
 *
 * OpenAPI spec version: 0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProfileApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/NHSX/MyNhs/0.1/mynhs/my/profile/centralnhs")]
        [ValidateModelState]
        [SwaggerOperation("MynhsMyProfileCentralnhsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(NhsProfile), description: "OK")]
        public virtual IActionResult MynhsMyProfileCentralnhsGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(NhsProfile));
            string exampleJson = null;
            exampleJson = "{\n  \"NhsNumber\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<NhsProfile>(exampleJson)
                        : default(NhsProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/NHSX/MyNhs/0.1/mynhs/my/profile")]
        [ValidateModelState]
        [SwaggerOperation("MynhsMyProfileGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(MyNhsProfile), description: "OK")]
        public virtual IActionResult MynhsMyProfileGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MyNhsProfile));
            string exampleJson = null;
            exampleJson = "{\n  \"GpProfile\" : {\n    \"GpIdCode\" : 0\n  },\n  \"NHSProfile\" : {\n    \"NhsNumber\" : 0\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<MyNhsProfile>(exampleJson)
                        : default(MyNhsProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/NHSX/MyNhs/0.1/mynhs/my/profile/gp")]
        [ValidateModelState]
        [SwaggerOperation("MynhsMyProfileGpGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(GpProfile), description: "OK")]
        public virtual IActionResult MynhsMyProfileGpGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(GpProfile));
            string exampleJson = null;
            exampleJson = "{\n  \"GpIdCode\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<GpProfile>(exampleJson)
                        : default(GpProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="userId"></param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/NHSX/MyNhs/0.1/mynhs/{userId}/profile")]
        [ValidateModelState]
        [SwaggerOperation("MynhsUserIdProfileGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(MyNhsProfile), description: "OK")]
        public virtual IActionResult MynhsUserIdProfileGet([FromRoute][Required]string userId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MyNhsProfile));
            string exampleJson = null;
            exampleJson = "{\n  \"GpProfile\" : {\n    \"GpIdCode\" : 0\n  },\n  \"NHSProfile\" : {\n    \"NhsNumber\" : 0\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<MyNhsProfile>(exampleJson)
                        : default(MyNhsProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
