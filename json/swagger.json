{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "My NHS Graph",
    "description" : "WIP Strawman API ideas for a Unified API myNHS API Graph endpoint, bringing together both new \"User Generated Data\" and existing sources into one endpoint and one Authorisation model, supporting delegated user access and proxy access. Modeling that the records belong to the \"tennant\" with owners having proxy access (ie full) and users being shared specifics records. Oauth scopes, with modifiers of .shared and .all. Look at Microsoft Graph for where that comes from. To support idempotency, all POST apis are just requests to start something, the put starts this. Alows for evential consistency. Long running GETs are removed, by POSTing requests for data, with a GET endpoint returned.",
    "version" : "0.1"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/NHSX/MyNhs/0.1",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "tags" : [ {
    "name" : "Digital Health Tools",
    "description" : "APIs that take submitted data and give an answer - ie a wrapper around \"the algorithm\", and not reading from the users data store"
  }, {
    "name" : "Access and Applications",
    "description" : "Applications and Services that have been granted access. A \"tenant\" has the data linked to it. It has owners (normally just 1) and if that person wants to share it, they can add additional users - ie family members - delegation / shared. Proxy could work by allowing additional owners to be added. Or, a childs record has both parents as owners, and the child can be optionally added with specific permissions? A user by default accessing their own data, would use the /my endpoints. A user given delegated access, would use the /{userId} endpoints. Full proxy access would allow access to the /my as if you were the primary user?"
  }, {
    "name" : "Profile",
    "description" : "NHS Profiles"
  }, {
    "name" : "Observations",
    "description" : "Basic Observations"
  }, {
    "name" : "Observations|Submissions",
    "description" : "Submit new observations"
  }, {
    "name" : "Digital Health Checks",
    "description" : "My Completed Digital Health Checks"
  }, {
    "name" : "Digital Health Checks|Submissions",
    "description" : "My Digital Health Checks - would take data from the \"Observations\" data store?"
  }, {
    "name" : "Medical Records",
    "description" : "dealing with long running GP queries (that don't have a SLA on their API calls), have a request driven model with a reponse to an end point to view status of request, and the actual result"
  }, {
    "name" : "Appointments",
    "description" : "Details of your appointments."
  }, {
    "name" : "Events",
    "description" : "Events and notifications."
  }, {
    "name" : "Audits",
    "description" : "Audit Access History"
  }, {
    "name" : "My NHS Management",
    "description" : "is not in the scope of a tenancy - ie covers all."
  } ],
  "paths" : {
    "/mynhsmanagement/tenants" : {
      "get" : {
        "tags" : [ "My NHS Management" ],
        "description" : "Gets a list of all tenancies for the current user. Required OAuth Scopes: [tenants.read]",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "tenants.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/appointments" : {
      "get" : {
        "tags" : [ "Appointments" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "appointment.read", "appointment.read.shared", "appointment.read.all" ]
        } ]
      }
    },
    "/mynhs/tools/healthcheck" : {
      "post" : {
        "tags" : [ "Digital Health Tools" ],
        "summary" : "Run a health check on provided data",
        "description" : "**Does not store anything**, just returns response",
        "operationId" : "PostHealthCheck",
        "requestBody" : {
          "description" : "Optional description in *Markdown*",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DigitalHealthCheckRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DigitalHealthCheckResult"
                }
              }
            }
          }
        }
      }
    },
    "/mynhs/tools/heartage" : {
      "post" : {
        "tags" : [ "Digital Health Tools" ],
        "requestBody" : {
          "description" : "Optional description in *Markdown*",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DigitalHealthCheckRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DigitalHealthCheckResult"
                }
              }
            }
          }
        }
      }
    },
    "/mynhs/tools/bloodpressure" : {
      "post" : {
        "tags" : [ "Digital Health Tools" ],
        "requestBody" : {
          "description" : "Returns an analysis of the given blood pressure reading.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BloodPressure"
              },
              "examples" : {
                "Normal" : {
                  "value" : {
                    "Systolic" : 110,
                    "Diastolic" : 70
                  }
                },
                "Hypertensive Crisis" : {
                  "value" : {
                    "Systolic" : 180,
                    "Diastolic" : 120
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BloodPressureResult"
                },
                "examples" : {
                  "Normal" : {
                    "value" : {
                      "BloodPressureCategory" : "Normal"
                    }
                  },
                  "Crisis" : {
                    "value" : {
                      "BloodPressureCategory" : "Hypertensive Crisis"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mynhs/{userId}/digitalhealthchecks" : {
      "get" : {
        "tags" : [ "Digital Health Checks|Submissions" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of items to skip before starting to collect the result set.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The numbers of items to return.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "default" : 20
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "digitalhealthcheck.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/digitalhealthchecks/submissions" : {
      "post" : {
        "tags" : [ "Digital Health Checks|Submissions" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "digitalhealthcheck.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/digitalhealthchecks/submissions/{submissionId}" : {
      "get" : {
        "tags" : [ "Digital Health Checks|Submissions" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "submissionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "example" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "digitalhealthcheck.read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Digital Health Checks|Submissions" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "submissionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "example" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "digitalhealthcheck.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/digitalhealthchecks/submissions/{submissionId}/submit" : {
      "put" : {
        "tags" : [ "Digital Health Checks|Submissions" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "submissionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "example" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "digitalhealthcheck.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/digitalhealthchecks/{healthCheckId}" : {
      "get" : {
        "tags" : [ "Digital Health Checks" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "healthCheckId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "example" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of items to skip before starting to collect the result set.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The numbers of items to return.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "default" : 20
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "digitalhealthcheck.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/digitalhealthchecks/{healthCheckId}/{healthCheckType}" : {
      "get" : {
        "tags" : [ "Digital Health Checks" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "healthCheckId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "example" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of items to skip before starting to collect the result set.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The numbers of items to return.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "healthCheckType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "weight", "bloodpressure", "height", "bloodsugar", "colesterol", "wellnessquestions", "age" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "digitalhealthcheck.read" ]
        } ]
      }
    },
    "/mynhs/tennantOrOrganisationOrTheNameForWhatRecordsAreLinkedTo" : {
      "get" : {
        "tags" : [ "Access and Applications" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "tennant.read" ]
        } ]
      }
    },
    "/mynhs/applications" : {
      "get" : {
        "tags" : [ "Access and Applications" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "applications.read" ]
        } ]
      }
    },
    "/mynhs/owners" : {
      "get" : {
        "tags" : [ "Access and Applications" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "applications.read" ]
        } ]
      }
    },
    "/mynhs/users" : {
      "get" : {
        "tags" : [ "Access and Applications" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "applications.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/user" : {
      "get" : {
        "tags" : [ "Access and Applications" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "applications.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords" : {
      "post" : {
        "tags" : [ "Medical Records" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyNhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "profile.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords/{requestId}" : {
      "get" : {
        "tags" : [ "Medical Records" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "requestId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyNhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "profile.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords/{requestId}/submit" : {
      "put" : {
        "tags" : [ "Medical Records" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "requestId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyNhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "profile.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/medicalrecords/detailed/nhs/requestRecords/results/{resultId}" : {
      "get" : {
        "tags" : [ "Medical Records" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "resultId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyNhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "profile.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/medicalrecords/summary/nhs" : {
      "get" : {
        "tags" : [ "Medical Records" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyNhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "profile.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/medicalrecords/summary/nhs/{trustId}" : {
      "get" : {
        "tags" : [ "Medical Records" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "trustId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyNhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "profile.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/profile/centralnhs" : {
      "get" : {
        "tags" : [ "Profile" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "profile.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/profile/gp" : {
      "get" : {
        "tags" : [ "Profile" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GpProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "profile.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/profile" : {
      "get" : {
        "tags" : [ "Profile" ],
        "description" : "Scopes: [profile.read, profile.read.shared, profile.read.all]",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyNhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "profile.read", "profile.read.shared", "profile.read.all" ]
        } ]
      }
    },
    "/mynhs/{userId}/observations/{observationType}" : {
      "get" : {
        "tags" : [ "Observations" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of items to skip before starting to collect the result set.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The numbers of items to return.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "observationType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "weight", "bloodpressure", "height" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        }
      }
    },
    "/mynhs/{userId}/observations/submissions" : {
      "get" : {
        "tags" : [ "Observations|Submissions" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Observations|Submissions" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        }
      }
    },
    "/mynhs/{userId}/observations/submissions/{submissionId}/submit" : {
      "put" : {
        "tags" : [ "Observations|Submissions" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "submissionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "example" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        }
      }
    },
    "/mynhs/{userId}/observations/submissions/{submissionId}" : {
      "get" : {
        "tags" : [ "Observations|Submissions" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "submissionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "example" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Observations|Submissions" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "submissionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "example" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        }
      }
    },
    "/mynhs/{userId}/observations/summaries" : {
      "get" : {
        "tags" : [ "Observations" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        }
      }
    },
    "/mynhs/{userId}/observations/summaries/{observationType}/{queryType}/{pastDays}" : {
      "get" : {
        "tags" : [ "Observations" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        }, {
          "name" : "observationType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "weight", "bloodpressure", "height" ]
          }
        }, {
          "name" : "queryType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "min", "max", "avg", "stdDev" ]
          }
        }, {
          "name" : "pastDays",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "enum" : [ 1, 3, 5, 7, 14, 30 ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "observations.bloodpressure.summary.read" ]
        } ]
      }
    },
    "/mynhs/{userId}/events" : {
      "get" : {
        "tags" : [ "Events" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2" : [ "events.read", "events.read.shared", "events.read.all" ]
        } ]
      }
    },
    "/mynhs/{userId}/audits" : {
      "get" : {
        "tags" : [ "Audits" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The User Id to access",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "type" : "string"
          },
          "examples" : {
            "userId" : {
              "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
              "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
            },
            "my" : {
              "summary" : "[my] - will not require addition restrictor on the scope",
              "value" : "my"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NhsProfile"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "MyNhsProfile" : {
        "type" : "object",
        "properties" : {
          "NHSProfile" : {
            "$ref" : "#/components/schemas/NhsProfile"
          },
          "GpProfile" : {
            "$ref" : "#/components/schemas/GpProfile"
          }
        }
      },
      "UserProfile" : {
        "type" : "object",
        "properties" : {
          "FirstName" : {
            "type" : "string"
          },
          "SurName" : {
            "type" : "string"
          },
          "DateOfBirth" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "NhsProfile" : {
        "type" : "object",
        "properties" : {
          "NhsNumber" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "GpProfile" : {
        "type" : "object",
        "properties" : {
          "GpIdCode" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "DigitalHealthCheckRequest" : {
        "type" : "object",
        "properties" : {
          "Age" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Height" : {
            "$ref" : "#/components/schemas/Height"
          },
          "Weight" : {
            "$ref" : "#/components/schemas/Mass"
          },
          "BloodPressure" : {
            "$ref" : "#/components/schemas/BloodPressure"
          },
          "BloodSugar" : {
            "type" : "string"
          },
          "Colesterol" : {
            "type" : "string"
          },
          "Ethnicity" : {
            "type" : "string"
          },
          "AlcoholUse" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Smoking" : {
            "type" : "integer",
            "format" : "int64"
          },
          "PhysicalActivity" : {
            "type" : "integer",
            "format" : "int64"
          },
          "FamilyHistory" : {
            "type" : "integer",
            "format" : "int64"
          },
          "Gender" : {
            "type" : "string"
          }
        }
      },
      "DigitalHealthCheckResult" : {
        "type" : "object",
        "properties" : {
          "HealthyPercentage" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Height" : {
        "type" : "object",
        "properties" : {
          "Millimeters" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1700
          }
        }
      },
      "Mass" : {
        "type" : "object",
        "properties" : {
          "Grams" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 100000
          }
        }
      },
      "BloodPressure" : {
        "type" : "object",
        "properties" : {
          "Systolic" : {
            "type" : "integer",
            "description" : "The bigger number (the first number)",
            "format" : "int64",
            "example" : 80
          },
          "Diastolic" : {
            "type" : "integer",
            "description" : "The smaller number (the second number)",
            "format" : "int64",
            "example" : 110
          }
        },
        "description" : "Diastolic/Systolic"
      },
      "BloodPressureResult" : {
        "type" : "object",
        "properties" : {
          "BloodPressureCategory" : {
            "type" : "string",
            "example" : "Hypertensive Crisis",
            "enum" : [ "Normal", "Elevated", "Hypertension Stage 1", "Hypertension Stage 2", "Hypertensive Crisis" ]
          }
        }
      }
    },
    "parameters" : {
      "skipParam" : {
        "name" : "skip",
        "in" : "query",
        "description" : "The number of items to skip before starting to collect the result set.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "minimum" : 0,
          "type" : "integer"
        }
      },
      "limitParam" : {
        "name" : "limit",
        "in" : "query",
        "description" : "The numbers of items to return.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "maximum" : 50,
          "minimum" : 1,
          "type" : "integer",
          "default" : 20
        }
      },
      "userIdParam" : {
        "name" : "userId",
        "in" : "path",
        "description" : "The User Id to access",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "pattern" : "^my$|[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
          "type" : "string"
        },
        "examples" : {
          "userId" : {
            "summary" : "[UserId UUID] - require .All or .Shared oath scope restrictors",
            "value" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
          },
          "my" : {
            "summary" : "[my] - will not require addition restrictor on the scope",
            "value" : "my"
          }
        }
      },
      "submissionIdParam" : {
        "name" : "submissionId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        },
        "example" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
      },
      "healthCheckIdParam" : {
        "name" : "healthCheckId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        },
        "example" : "baf12b6c-d18b-43ad-b49e-e72ca102a970"
      },
      "observationTypeParam" : {
        "name" : "observationType",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "all", "weight", "bloodpressure", "height" ]
        }
      },
      "healthCheckTypeParam" : {
        "name" : "healthCheckType",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "all", "weight", "bloodpressure", "height", "bloodsugar", "colesterol", "wellnessquestions", "age" ]
        }
      },
      "queryTypeParam" : {
        "name" : "queryType",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "min", "max", "avg", "stdDev" ]
        }
      },
      "pastDaysParam" : {
        "name" : "pastDays",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "number",
          "enum" : [ 1, 3, 5, 7, 14, 30 ]
        }
      }
    },
    "securitySchemes" : {
      "OAuth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://example.com/oauth/authorize",
            "tokenUrl" : "https://example.com/oauth/token",
            "scopes" : {
              "applications.read" : "Grants read access to applications",
              "profile.read" : "Read My Profile- only for owner to read the primary user profile",
              "profile.read.all" : "Read All Profiles - ie read profile of primary user if you have been given guest access",
              "events.read" : "Read My Events in this tennant",
              "events.read.shared" : "Read All events shared with me (ie another users events)",
              "events.read.all" : "Read All events - must be granted owner for this",
              "digitalhealthcheck.read" : "Grants read access to digital health check",
              "digitalhealthcheck.read.shared" : "Grants read access to digital health check",
              "observations.read" : "Read observations",
              "observations.read.shared" : "Read all obs",
              "observations.bloodpressure.read" : "Read your blood pressures",
              "observations.bloodpressure.read.shared" : "Read any blood pressures shared with you",
              "observations.bloodpressure.submit" : "Submit new blood pressure reading",
              "observations.bloodpressure.delete" : "Delete existing blood pressure reading",
              "observations.bloodpressure.summary.read" : "read summary",
              "observations.bloodpressure.summary.read.shared" : "sd"
            }
          }
        }
      }
    }
  }
}