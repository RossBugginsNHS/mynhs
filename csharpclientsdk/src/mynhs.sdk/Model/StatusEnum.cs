/* 
 * My NHS Graph
 *
 * WIP Strawman API ideas for a Unified API myNHS API Graph endpoint, bringing together both new \"User Generated Data\" and existing sources into one endpoint and one Authorisation model, supporting delegated user access and proxy access. Modeling that the records belong to the \"tennant\" with owners having proxy access (ie full) and users being shared specifics records. Oauth scopes, with modifiers of .shared and .all. Look at Microsoft Graph for where that comes from. To support idempotency, all POST apis are just requests to start something, the put starts this. Alows for evential consistency. Long running GETs are removed, by POSTing requests for data, with a GET endpoint returned.
 *
 * OpenAPI spec version: 0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = mynhs.sdk.Client.SwaggerDateConverter;

namespace mynhs.sdk.Model
{
    /// <summary>
    /// Defines StatusEnum
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
    {
        /// <summary>
        /// Enum NotStarted for value: Not Started
        /// </summary>
        [EnumMember(Value = "Not Started")]
        NotStarted = 1,
        /// <summary>
        /// Enum Inprogress for value: In progress
        /// </summary>
        [EnumMember(Value = "In progress")]
        Inprogress = 2,
        /// <summary>
        /// Enum Success for value: Success
        /// </summary>
        [EnumMember(Value = "Success")]
        Success = 3,
        /// <summary>
        /// Enum Failed for value: Failed
        /// </summary>
        [EnumMember(Value = "Failed")]
        Failed = 4    }
}
