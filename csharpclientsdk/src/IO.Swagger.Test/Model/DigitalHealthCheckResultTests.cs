/* 
 * My NHS Graph
 *
 * WIP Strawman API ideas for a Unified API myNHS API Graph endpoint, bringing together both new \"User Generated Data\" and existing sources into one endpoint and one Authorisation model, supporting delegated user access and proxy access. Modeling that the records belong to the \"tennant\" with owners having proxy access (ie full) and users being shared specifics records. Oauth scopes, with modifiers of .shared and .all. Look at Microsoft Graph for where that comes from. To support idempotency, all POST apis are just requests to start something, the put starts this. Alows for evential consistency. Long running GETs are removed, by POSTing requests for data, with a GET endpoint returned.
 *
 * OpenAPI spec version: 0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DigitalHealthCheckResult
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class DigitalHealthCheckResultTests
    {
        // TODO uncomment below to declare an instance variable for DigitalHealthCheckResult
        //private DigitalHealthCheckResult instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of DigitalHealthCheckResult
            //instance = new DigitalHealthCheckResult();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DigitalHealthCheckResult
        /// </summary>
        [Test]
        public void DigitalHealthCheckResultInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DigitalHealthCheckResult
            //Assert.IsInstanceOfType<DigitalHealthCheckResult> (instance, "variable 'instance' is a DigitalHealthCheckResult");
        }


        /// <summary>
        /// Test the property 'HealthyPercentage'
        /// </summary>
        [Test]
        public void HealthyPercentageTest()
        {
            // TODO unit test for the property 'HealthyPercentage'
        }

    }

}
