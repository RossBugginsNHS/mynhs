/* 
 * My NHS Graph
 *
 * WIP Strawman API ideas for a Unified API myNHS API Graph endpoint, bringing together both new \"User Generated Data\" and existing sources into one endpoint and one Authorisation model, supporting delegated user access and proxy access. Modeling that the records belong to the \"tennant\" with owners having proxy access (ie full) and users being shared specifics records. Oauth scopes, with modifiers of .shared and .all. Look at Microsoft Graph for where that comes from. To support idempotency, all POST apis are just requests to start something, the put starts this. Alows for evential consistency. Long running GETs are removed, by POSTing requests for data, with a GET endpoint returned.
 *
 * OpenAPI spec version: 0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DigitalHealthChecksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DigitalHealthChecksApiTests
    {
        private DigitalHealthChecksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DigitalHealthChecksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DigitalHealthChecksApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DigitalHealthChecksApi
            //Assert.IsInstanceOfType(typeof(DigitalHealthChecksApi), instance, "instance is a DigitalHealthChecksApi");
        }

        /// <summary>
        /// Test MynhsMyDigitalhealthchecksHealthcheckidAgeGet
        /// </summary>
        [Test]
        public void MynhsMyDigitalhealthchecksHealthcheckidAgeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string healthcheckid = null;
            //var response = instance.MynhsMyDigitalhealthchecksHealthcheckidAgeGet(healthcheckid);
            //Assert.IsInstanceOf<NhsProfile> (response, "response is NhsProfile");
        }
        /// <summary>
        /// Test MynhsMyDigitalhealthchecksHealthcheckidBloodpressureGet
        /// </summary>
        [Test]
        public void MynhsMyDigitalhealthchecksHealthcheckidBloodpressureGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string healthcheckid = null;
            //var response = instance.MynhsMyDigitalhealthchecksHealthcheckidBloodpressureGet(healthcheckid);
            //Assert.IsInstanceOf<NhsProfile> (response, "response is NhsProfile");
        }
        /// <summary>
        /// Test MynhsMyDigitalhealthchecksHealthcheckidBloodsugarGet
        /// </summary>
        [Test]
        public void MynhsMyDigitalhealthchecksHealthcheckidBloodsugarGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string healthcheckid = null;
            //var response = instance.MynhsMyDigitalhealthchecksHealthcheckidBloodsugarGet(healthcheckid);
            //Assert.IsInstanceOf<NhsProfile> (response, "response is NhsProfile");
        }
        /// <summary>
        /// Test MynhsMyDigitalhealthchecksHealthcheckidColesterolGet
        /// </summary>
        [Test]
        public void MynhsMyDigitalhealthchecksHealthcheckidColesterolGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string healthcheckid = null;
            //var response = instance.MynhsMyDigitalhealthchecksHealthcheckidColesterolGet(healthcheckid);
            //Assert.IsInstanceOf<NhsProfile> (response, "response is NhsProfile");
        }
        /// <summary>
        /// Test MynhsMyDigitalhealthchecksHealthcheckidGet
        /// </summary>
        [Test]
        public void MynhsMyDigitalhealthchecksHealthcheckidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string healthcheckid = null;
            //var response = instance.MynhsMyDigitalhealthchecksHealthcheckidGet(healthcheckid);
            //Assert.IsInstanceOf<NhsProfile> (response, "response is NhsProfile");
        }
        /// <summary>
        /// Test MynhsMyDigitalhealthchecksHealthcheckidHeightGet
        /// </summary>
        [Test]
        public void MynhsMyDigitalhealthchecksHealthcheckidHeightGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string healthcheckid = null;
            //var response = instance.MynhsMyDigitalhealthchecksHealthcheckidHeightGet(healthcheckid);
            //Assert.IsInstanceOf<NhsProfile> (response, "response is NhsProfile");
        }
        /// <summary>
        /// Test MynhsMyDigitalhealthchecksHealthcheckidWeightGet
        /// </summary>
        [Test]
        public void MynhsMyDigitalhealthchecksHealthcheckidWeightGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string healthcheckid = null;
            //var response = instance.MynhsMyDigitalhealthchecksHealthcheckidWeightGet(healthcheckid);
            //Assert.IsInstanceOf<NhsProfile> (response, "response is NhsProfile");
        }
        /// <summary>
        /// Test MynhsMyDigitalhealthchecksHealthcheckidWellnessquestionsGet
        /// </summary>
        [Test]
        public void MynhsMyDigitalhealthchecksHealthcheckidWellnessquestionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string healthcheckid = null;
            //var response = instance.MynhsMyDigitalhealthchecksHealthcheckidWellnessquestionsGet(healthcheckid);
            //Assert.IsInstanceOf<NhsProfile> (response, "response is NhsProfile");
        }
    }

}
